# Default values for common.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# 项目名称，生成 service、deployment 等的 label
projectName: "change-this"
tier: "be"
team: "infra"
# 部署副本数
replicaCount: 1
# fullname 默认根据 projectName 或者 releaseName 生成，如果要覆盖，在下面参数中指定
# fullNameOverride: ""

# 私有镜像仓库的秘钥
imagePullSecrets: []

# 镜像相关参数
image:
# repository: codepiano.com # 私有仓库地址
  name: "image-name" # 镜像名称
  tag: "image-tag" # 镜像 tag，通过 gitlab-ci 传递进来
  pullPolicy: IfNotPresent # 默认镜像拉取策略

# 容器相关配置
container:
  env: {}
  livenessProbe: {}   # 容器探针，k8s 使用探针判断容器是否需要重启
#   tcpSocket:
#     port: http
#   livenessProbe:   # 容器探针，k8s 使用探针判断容器是否需要重启
#   timeoutSeconds: 5
#   periodSeconds: 20
#   successThreshold: 1
#   initialDelaySeconds: 10
#   failureThreshold: 3
  readinessProbe: {} # 服务探针，k8s 使用探针确定容器内服务是否处于可处理请求的状态
#   tcpSocket:
#     port: http
#   timeoutSeconds: 5
#   periodSeconds: 20
#   successThreshold: 1
#   initialDelaySeconds: 10
#   failureThreshold: 3

# service 相关配置
service:
  annotations: {}
  type: ClusterIP # 服务暴露的类型
  expose: []
#   - port: 80
#     name: http1
#     targetPort: 8080
#     protocol: TCP
#   - port: 8000
#     name: http2
#     targetPort: 8081
#     protocol: TCP

# deployment 配置
deployment:
  annotations: {}

#pvc:
#  - name: nfs-1
#    volumnName: nfs-1
#    mountPath: /nfs-1
#    accessModes:
#      - ReadWriteMany
#      - ReadWriteOnce
#    storageClassName: "test"
#    storage: 1Mi
#    selector:
#      matchLabels:
#        release: "stable"
#      matchExpressions:
#        - "{key: environment, operator: In, values: [dev]}"

resources: # 资源限制
  limits:
    cpu: "2"
    memory: 2Gi
  requests:
    cpu: "1"
    memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}
