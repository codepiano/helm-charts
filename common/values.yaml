# Default values for common.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# 项目名称，生成 service、deployment 等的 label
projectName: "change-this"
tier: "be"
team: "infra"
# 部署副本数
replicaCount: 1
# fullname 默认根据 projectName 或者 releaseName 生成，如果要覆盖，在下面参数中指定
# fullNameOverride: ""

imagePullSecrets: []

# 镜像相关参数
image:
  repository: codepiano.com # 私有仓库地址
  name: "image-name" # 镜像名称
  tag: "image-tag" # 镜像 tag，通过 gitlab-ci 传递进来
  pullPolicy: IfNotPresent # 默认镜像拉取策略

# 容器相关配置
container:
  port: 8080 # 容器中服务监听的端口，对应 service 中的端口
  env: {}
  livenessProbe:   # 容器探针，k8s 使用探针判断容器是否需要重启
    tcpSocket:
      port: http
    livenessProbe:   # 容器探针，k8s 使用探针判断容器是否需要重启
    timeoutSeconds: 5
    periodSeconds: 20
    successThreshold: 1
    initialDelaySeconds: 10
    failureThreshold: 3
  readinessProbe:  # 服务探针，k8s 使用探针确定容器内服务是否处于可处理请求的状态
    tcpSocket:
      port: http
    timeoutSeconds: 5
    periodSeconds: 20
    successThreshold: 1
    initialDelaySeconds: 10
    failureThreshold: 3

# service 相关配置
service:
  annotations: {}
  type: ClusterIP # 服务暴露的类型
  port: 80

# ingress 配置
ingress:
  enabled: true # 是否开启 ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: / # base 路径
  hosts: # 域名，通过 host 请求头分发到后端各自的 service 上，类似 kong
    - codepiano.com
  tls: [] # 证书相关
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# deployment 配置
deployment:
  annotations: {}

pvc:
  - name: nfs-1
    volumnName: nfs-1
    mountPath: /nfs-1
    accessModes:
      - ReadWriteMany
      - ReadWriteOnce
    storageClassName: "test"
    storage: 1Mi
    selector:
      matchLabels:
        release: "stable"
      matchExpressions:
        - "{key: environment, operator: In, values: [dev]}"

resources: # 资源限制
  limits:
    cpu: "2"
    memory: 2Gi
  requests:
    cpu: "1"
    memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}
